{"version":3,"sources":["images/cryptocurrency.png","components/Navbar/Navbar.js","components/LineChart/LineChart.js","services/cryptoApi.js","components/pages/HomePage/HomePage.js","components/pages/Exchanges/Exchanges.js","components/pages/Cryptocurrencies/Cryptocurrrencies.js","components/pages/CryptoDetails/CryptoDetails.js","services/cryptoNewsApi.js","components/pages/News/News.js","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","Typography","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","data","history","length","push","price","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColors","change","options","scales","yAxes","ticks","beginAtZero","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timePeriod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","HomePage","isFetching","globalStats","stats","span","title","value","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","simplified","Text","Panel","Collapse","Exchanges","exhangeList","exchanges","map","exchange","showArrow","header","rank","iconUrl","name","volume","numberOfMarkets","marketShare","id","HTMLReactParser","description","CryptoCurrrencies","cryptosList","cryptos","setCryptos","searchTerm","setSearchTerm","console","log","filteredData","coins","filter","coin","toLowerCase","includes","placeholder","onChange","e","target","gutter","currency","xs","sm","lg","extra","hoverable","marketCap","Option","Select","CryptoDetails","useParams","setTimePeriod","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","time","date","links","link","type","href","rel","cryptoNewsHeaders","cryptoNewsApi","getCryptosNews","newsCategory","useGetCryptosNewsQuery","demoImg","News","setNewsCategory","cryptosNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","toLoweCase","news","style","maxWidth","maxHeight","image","thumbnail","contentUrl","alt","substring","provider","moment","datePublised","startOf","fromNow","App","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.85f5d8e1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from \"react\";\nimport { Button, Menu, Typography, Avatar } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  HomeOutlined,\n  MoneyCollectOutlined,\n  BulbOutlined,\n  FundOutlined,\n  MenuOutlined,\n} from \"@ant-design/icons\";\n\nimport icon from \"../../images/cryptocurrency.png\";\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(true);\n\n  useEffect(() => {\n    //take the width of window\n    const handleResize = () => setScreenSize(window.innerWidth);\n    window.addEventListener(\"resize\", handleResize);\n\n    handleResize();\n    //ComponentDidUnmount*\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize < 768) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n\n  return (\n    <div className=\"nav-container\">\n      {/* Logo */}\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\" />\n        <Typography.Title level={2} className=\"logo\">\n          <Link to=\"/\"> Crypto</Link>\n        </Typography.Title>\n        {/* <Button className=\"menu-control-container\"> </Button> */}\n      </div>\n      <Button\n        className=\"menu-control-container\"\n        onClick={() => setActiveMenu(!activeMenu)}\n      >\n        <MenuOutlined />\n      </Button>\n      {/* MenuItems */}\n      {activeMenu && (\n        <Menu theme=\"dark\">\n          <Menu.Item icon={<HomeOutlined />}>\n            <Link to=\"/\"> Home</Link>\n          </Menu.Item>\n          <Menu.Item icon={<FundOutlined />}>\n            <Link to=\"/cryptocurrencies\"> Cryptocurrencies</Link>\n          </Menu.Item>\n          <Menu.Item icon={<MoneyCollectOutlined />}>\n            <Link to=\"/exchanges\"> Exchanges</Link>\n          </Menu.Item>\n          <Menu.Item icon={<BulbOutlined />}>\n            <Link to=\"/news\"> News</Link>\n          </Menu.Item>\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Col, Row, Typography } from \"antd\";\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  //push to array each price\n  for (let i = 0; i < coinHistory?.data?.history?.length; i++) {\n    coinPrice.push(coinHistory.data.history[i].price);\n    coinTimestamp.push(\n      new Date(coinHistory.data.history[i].timestamp).toLocaleDateString()\n    );\n  }\n\n  //data object for chart\n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: \"Price in USD\",\n        data: coinPrice,\n        fill: false,\n        backgroundColor: \"#0071bd\",\n        borderColors: \"#0071bd\",\n      },\n    ],\n  };\n\n  //options for Chart\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">\n          {\" \"}\n          {coinName}\n        </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">\n            {coinHistory?.data?.change}%\n          </Title>\n          <Title level={5} className=\"current-price\">\n            Current\n            {coinName} Price : ${currentPrice}\n          </Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n    </>\n  );\n};\n\nexport default LineChart;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoApiHeaders = {\n  \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\n  \"x-rapidapi-key\": \"f8edd6ee7cmshd719902667f424cp13a538jsn09eff252dcbe\",\n};\n\nconst baseUrl = \"https://coinranking1.p.rapidapi.com\";\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n  reducerPath: \"cryptoApi\",\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`),\n    }),\n    getExchanges: builder.query({\n      query: () => createRequest(`/exchanges`),\n    }),\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timePeriod }) =>\n        createRequest(`/coin/${coinId}/history/${timePeriod}`),\n    }),\n  }),\n});\n\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery,\n  useGetExchangesQuery,\n} = cryptoApi;\n","import React from \"react\";\n\nimport millify from \"millify\";\nimport { Typography, Row, Col, Statistic } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\n//hook defined in services\nimport { useGetCryptosQuery } from \"../../../services/cryptoApi\";\nimport { Cryptocurrencies, News } from \"../../index\";\n\n//define\nconst { Title } = Typography;\n\nconst HomePage = () => {\n  const { data, isFetching } = useGetCryptosQuery(10);\n  // console.log(data);\n  const globalStats = data?.data?.stats;\n\n  if (isFetching) return \"Loading\";\n  return (\n    <>\n      <Title level={2} className=\"heading\">\n        Global Crypto Stats\n      </Title>\n      <Row>\n        <Col span={12}>\n          <Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Exchanges\"\n            value={millify(globalStats.totalExchanges)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Market Cap\"\n            value={millify(globalStats.totalMarketCap)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total 24h Volume\"\n            value={millify(globalStats.total24hVolume)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Markets\"\n            value={millify(globalStats.totalMarkets)}\n          />\n        </Col>\n      </Row>\n      {/* Crypto page */}\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Top 10 Cryptocurrencies in the world\n        </Title>\n        <Title level={3} className=\"show-more\">\n          <Link to=\"/cryptocurrencies\">Show more </Link>\n        </Title>\n      </div>\n      <Cryptocurrencies simplified />\n\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Latest Crypto news\n        </Title>\n        <Title level={3} className=\"show-more\">\n          <Link to=\"/news\">Show more </Link>\n        </Title>\n      </div>\n      <News simplified />\n    </>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport millify from \"millify\";\nimport { Collapse, Col, Row, Typography, Avatar } from \"antd\";\nimport HTMLReactParser from \"html-react-parser\";\n\nimport { useGetExchangesQuery } from \"../../../services/cryptoApi\";\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst Exchanges = () => {\n  const { data, isFetching } = useGetExchangesQuery();\n  const exhangeList = data?.data?.exchanges;\n\n  if (isFetching) return \"Loading...\";\n\n  return (\n    <>\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24h Trade Volume</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Changes</Col>\n      </Row>\n      <Row>\n        {exhangeList.map((exchange) => (\n          <Col span={24}>\n            <Collapse>\n              <Panel\n                key={exchange.id}\n                showArrow={false}\n                header={\n                  <Row key={exchange.id}>\n                    <Col span={6}>\n                      <Text>\n                        <strong> {exchange.rank} </strong>\n                      </Text>\n                      <Avatar\n                        className=\"exchange-image\"\n                        src={exchange.iconUrl}\n                      />\n                      <Text>\n                        <strong>{exchange.name}</strong>\n                      </Text>\n                    </Col>\n                    <Col span={6}>${millify(exchange.volume)}</Col>\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\n                  </Row>\n                }\n              >\n                {HTMLReactParser(exchange.description || \"\")}\n              </Panel>\n            </Collapse>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Exchanges;\n","import React, { useState, useEffect } from \"react\";\nimport millify from \"millify\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Col, Input } from \"antd\";\n\nimport { useGetCryptosQuery } from \"../../../services/cryptoApi\";\n\nconst CryptoCurrrencies = ({ simplified }) => {\n  //number of cryptos to fetch\n  const count = simplified ? 10 : 100;\n\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n\n  const [cryptos, setCryptos] = useState();\n\n  // Crypto to find\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  //fetch and filter by search term\n  useEffect(() => {\n    console.log(cryptosList);\n    const filteredData = cryptosList?.data?.coins.filter((coin) =>\n      coin.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    setCryptos(filteredData);\n  }, [cryptosList, searchTerm]);\n\n  if (isFetching) return \"Loading\";\n  return (\n    <>\n    \n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input\n            placeholder=\"Search cryptocurrency\"\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n      )}\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\n        {cryptos?.map((currency) => (\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\n            <Link to={`/crypto/${currency.id}`}>\n              <Card\n                title={`${currency.rank}. ${currency.name}`}\n                extra={<img src={currency.iconUrl} className=\"crypto-image\" />}\n                hoverable\n              >\n                <p>Price : {millify(currency.price)}</p>\n                <p>Market Cap : {millify(currency.marketCap)}</p>\n                <p>Daily Change : {millify(currency.change)} % </p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default CryptoCurrrencies;\n","import React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select } from \"antd\";\nimport {\n  MoneyCollectOutlined,\n  DollarCircleOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  StopOutlined,\n  TrophyOutlined,\n  CheckOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n} from \"@ant-design/icons\";\n\nimport {\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery,\n} from \"../../../services/cryptoApi\";\n\nimport { LineChart } from \"../../index\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\n\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({\n    coinId,\n    timePeriod,\n  });\n\n  if (isFetching) return \"Loading..\";\n\n  const cryptoDetails = data?.data?.coin;\n\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n  const stats = [\n    {\n      title: \"Price to USD\",\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    { title: \"Rank\", value: cryptoDetails.rank, icon: <NumberOutlined /> },\n    {\n      title: \"24h Volume\",\n      value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n      icon: <ThunderboltOutlined />,\n    },\n    {\n      title: \"Market Cap\",\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    {\n      title: \"All-time-high(daily avg.)\",\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n      icon: <TrophyOutlined />,\n    },\n  ];\n\n  const genericStats = [\n    {\n      title: \"Number Of Markets\",\n      value: cryptoDetails.numberOfMarkets,\n      icon: <FundOutlined />,\n    },\n    {\n      title: \"Number Of Exchanges\",\n      value: cryptoDetails.numberOfExchanges,\n      icon: <MoneyCollectOutlined />,\n    },\n    {\n      title: \"Aprroved Supply\",\n      value: cryptoDetails.approvedSupply ? (\n        <CheckOutlined />\n      ) : (\n        <StopOutlined />\n      ),\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Total Supply\",\n      value: `$ ${millify(cryptoDetails.totalSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Circulating Supply\",\n      value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n  ];\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {cryptoDetails.name}({cryptoDetails.slug}) Price\n        </Title>\n        {cryptoDetails.name} live price in US Dollars View value statistic ,\n        marker cap and suply .\n      </Col>\n      <Select\n        defaultValue=\"7d\"\n        className=\"select-timeperiod\"\n        placeholder=\"Select Time \"\n        onChange={(time) => setTimePeriod(time)}\n      >\n        {time.map((date) => (\n          <Option key={date}> {date} </Option>\n        ))}\n      </Select>\n      <LineChart\n        coinHistory={coinHistory}\n        currentPrice={millify(cryptoDetails.price)}\n        coinName={cryptoDetails.name}\n      />\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics \">\n          <Col className=\"coin-value=statistics-heading\">\n            <Title level={3} className=\"coin-detailes-heading\">\n              {cryptoDetails.name} Value Statistic\n            </Title>\n            <p>\n              An overview showind the statistics of {cryptoDetails.name} , such\n              as the basse and quote currenct , the rank and the volume{\" \"}\n            </p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon} </Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\"> {value} </Text>\n            </Col>\n          ))}\n        </Col>\n        {/* //Second Coloumn */}\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value=statistics-heading\">\n            <Title level={3} className=\"coin-detailes-heading\">\n              Other Statistic\n            </Title>\n            <p>An overview showind the statistics of all Cryptocurrencies</p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon} </Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\"> {value} </Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={3} className=\"coin-details-heading\">\n            What is {cryptoDetails.name}\n            {HTMLReactParser(cryptoDetails.description)}\n          </Title>\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">\n            {cryptoDetails.name} Links\n          </Title>\n          {cryptoDetails.links.map((link) => (\n            <Row className=\"coin-link\" key={link.name}>\n              <Title level={5} className=\"link-name\">\n                {link.type}\n              </Title>\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\n                {link.name}\n              </a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoNewsHeaders = {\n  \"x-bingapis-sdk\": \"true\",\n  \"x-rapidapi-host\": \"bing-news-search1.p.rapidapi.com\",\n  \"x-rapidapi-key\": \"f8edd6ee7cmshd719902667f424cp13a538jsn09eff252dcbe\",\n};\n\nconst baseUrl = \"https://bing-news-search1.p.rapidapi.com\";\n\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\n\nexport const cryptoNewsApi = createApi({\n  reducerPath: \"cryptoNewsApi\",\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({\n    getCryptosNews: builder.query({\n      query: ({ newsCategory, count }) =>\n        createRequest(\n          `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\n        ),\n    }),\n  }),\n});\n\nexport const { useGetCryptosNewsQuery } = cryptoNewsApi;\n","import React, { useState, useEffect } from \"react\";\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\nimport moment from \"moment\";\n\nimport { useGetCryptosNewsQuery } from \"../../../services/cryptoNewsApi\";\nimport { useGetCryptosQuery } from \"../../../services/cryptoApi\";\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\nconst demoImg =\n  \"https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News\";\n\nconst News = ({ simplified }) => {\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\n\n  //get news\n  const { data: cryptosNews } = useGetCryptosNewsQuery({\n    newsCategory,\n    //numvber of news on display 6 on simplified components else 12 \n    count: simplified ? 6 : 12,\n  });\n  //get currencies name\n  const { data } = useGetCryptosQuery(100);\n  // console.log(cryptosNews);\n  if (!cryptosNews?.value) return \"Loading ...\";\n\n  return (\n    <Row gutter={[24, 24]}>\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"Select a Crypto\"\n            optionFilterProp=\"children\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexOf(input.toLoweCase()) >= 0\n            }\n          >\n            <Option value=\"Cryptocurrency\">Cryptocurrrency</Option>\n            {data?.data?.coins.map((coin) => (\n              <Option value={coin.name}> {coin.name}</Option>\n            ))}\n          </Select>\n        </Col>\n      )}\n      {cryptosNews?.value.map((news, i) => (\n        <Col xs={24} sm={12} lg={8} key={i}>\n          <Card hoverable className=\"news-card\">\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n              <div className=\"news-image-container\">\n                <Title className=\"news-title\" level={4}>\n                  {news.name}\n                </Title>\n                <img\n                  style={{ maxWidth: \"200px\", maxHeight: \"100px\" }}\n                  src={news?.image?.thumbnail?.contentUrl || demoImg}\n                  alt=\"news\"\n                />\n              </div>\n              <p>\n                {news.description > 100\n                  ? `${news.description.substring(0, 100)}...`\n                  : news.description}\n              </p>\n              <div className=\"provider-container\">\n                <div>\n                  <Avatar\n                    src={\n                      news.provider[0]?.image?.thumbnail?.contentUrl || demoImg\n                    }\n                  />\n                  <Text className=\"provider-name\">\n                    {news.provider[0]?.name}\n                  </Text>\n                </div>\n                <Text>{moment(news.datePublised).startOf(\"ss\").fromNow()}</Text>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nexport default News;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { Layout, Typography, Space } from \"antd\";\n\nimport \"antd/dist/antd.css\";\n\n//Components\nimport {\n  Navbar,\n  HomePage,\n  Exchanges,\n  Cryptocurrencies,\n  CryptoDetails,\n  News,\n} from \"./components\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n        <Navbar />\n      </div>\n      <div className=\"main\">\n        <Layout>\n          <div className=\"routes\">\n            <Switch>\n              <Route exact path=\"/\">\n                <HomePage />\n              </Route>\n              <Route exact path=\"/exchanges\">\n                <Exchanges />\n              </Route>\n              <Route exact path=\"/cryptocurrencies\">\n                <Cryptocurrencies />\n              </Route>\n              <Route exact path=\"/crypto/:coinId\">\n                <CryptoDetails />\n              </Route>\n              <Route exact path=\"/news\">\n                <News />\n              </Route>\n            </Switch>\n          </div>\n        </Layout>\n\n        <div className=\"footer\" level={5} style={{ color: \"white\" }}>\n          <Typography.Title style={{ textAlign: \"center\" }}>\n            Crypto <br />\n            Rights reserved\n          </Typography.Title>\n          <Space>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/exchanges\">Exchanges</Link>\n            <Link to=\"/news\">News</Link>\n          </Space>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport { cryptoApi } from \"../services/cryptoApi\";\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./app/store\";\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}